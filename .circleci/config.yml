version: 2

jobs:
  build:
    docker:
    - image: circleci/golang:1.10.3
    working_directory: /go/src/github.com/joshdk/chromatic
    steps:
    - checkout
    - run:
        name: Describe commit
        command: git describe --tags
    - run:
        name: Install dependencies
        command: |
          sudo env GOOS=darwin GOARCH=amd64 $(which go) install std
          go get golang.org/x/tools/cmd/goimports
          wget -O /tmp/upx.tar.xz https://github.com/upx/upx/releases/download/v3.94/upx-3.94-amd64_linux.tar.xz
          tar --strip=1 -C /tmp -xf /tmp/upx.tar.xz
          sudo install /tmp/upx /usr/bin/upx
    - run:
        name: Run tests
        command: |
          gofmt -l -s -w $(find . -name '*.go' | grep -v /vendor/)
          goimports -l -w $(find . -name '*.go' | grep -v /vendor/)
          go test -race -v ./...
    - run:
        name: Build binaries
        command: |
          VERSION="$(git describe --tags)"
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a \
            -ldflags="-s -w -X main.version=$VERSION" \
            -o artifacts/chromatic_darwin_amd64 .
          CGO_ENABLED=0 GOOS=darwin GOARCH=386 go build -a \
            -ldflags="-s -w -X main.version=$VERSION" \
            -o artifacts/chromatic_darwin_386 .
    - run:
        name: Compress binary
        command: upx --best --ultra-brute artifacts/chromatic_*
    - run:
        name: Checksum binary
        working_directory: artifacts
        command: sha256sum --binary --tag chromatic_* | tee checksums.txt
    - store_artifacts:
        path: artifacts
        destination: /artifacts

workflows:
  version: 2
  build:
    jobs:
    - build:
        filters:
          tags:
            only: /.*/