version: 2

jobs:
  test:
    docker:
    - image: circleci/golang:1.16.3
    working_directory: /go/src/github.com/joshdk/chromatic
    steps:
    - checkout
    - run:
        name: Install dependencies
        working_directory: /tmp
        command: |
          go get golang.org/x/tools/cmd/goimports
    - run:
        name: Run tests
        command: |
          gofiles="$(find . -name '*.go' | grep -v /vendor/)"
          test -z "$(gofmt -l -s  $gofiles)"
          test -z "$(goimports -l $gofiles)"
          go test -race -v ./...

  build:
    docker:
    - image: circleci/golang:1.16.3
    working_directory: /go/src/github.com/joshdk/chromatic
    steps:
    - checkout
    - run:
        name: Install dependencies
        working_directory: /tmp
        command: |
          sudo env GOOS=darwin GOARCH=amd64 $(which go) install std
          wget https://github.com/upx/upx/releases/download/v3.94/upx-3.94-amd64_linux.tar.xz
          tar --strip=1 -xf upx-3.94-amd64_linux.tar.xz
          sudo install upx /usr/bin
    - run:
        name: Build binaries
        command: |
          version="$(git describe --tags)"
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a \
            -ldflags="-s -w -X main.version=$version" \
            -o artifacts/chromatic_darwin_amd64 .
    - run:
        name: Compress binary
        command: upx --best --ultra-brute artifacts/chromatic_*
    - run:
        name: Checksum binary
        working_directory: artifacts
        command: sha256sum --binary --tag chromatic_* | tee checksums.txt
    - store_artifacts:
        path: artifacts
        destination: /artifacts
    - persist_to_workspace:
        root: .
        paths:
        - artifacts

  release:
    docker:
    - image: cibuilds/github:0.12.0
    working_directory: /go/src/github.com/joshdk/chromatic
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Upload artifacts
        command: ghr -u joshdk -r chromatic -replace ${CIRCLE_TAG} artifacts

workflows:
  version: 2
  build:
    jobs:
    - test
    - build

  release:
    jobs:
    - build:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/
    - release:
        requires:
        - build
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/
